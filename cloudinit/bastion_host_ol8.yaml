#cloud-config
# ------------------------------------------------------------------------------
# Trivadis - Part of Accenture, Platform Factory - Data Platforms
# Saegereistrasse 29, 8152 Glattbrugg, Switzerland
# ------------------------------------------------------------------------------
# Name.......: bastion_host_ol8.yaml 
# Author.....: Stefan Oehrli (oes) stefan.oehrli@accenture.com
# Editor.....: Stefan Oehrli
# Date.......: 2023.04.19
# Revision...: 
# Purpose....: cloud-init configuration file for bastion hosts based on OL8
# Notes......: --
# Reference..: --
# License....: Apache License Version 2.0, January 2004 as shown
#              at http://www.apache.org/licenses/
# ------------------------------------------------------------------------------
# Capture all subprocess output into a logfile
output: {all: '| tee -a /var/log/cloud-init-output.log'}

# --- Install/upgrade yum packages ---------------------------------------------
package_upgrade: true           # Enable yum update
packages:                       # install additional packages
  - git                         # Fast Version Control System
  - tmux                        # A terminal multiplexer
  - firewalld                   # A firewall daemon with D-Bus interface providing a dynamic firewall
# --- EOF Install/upgrade yum packages -----------------------------------------

# --- Create users -------------------------------------------------------------
users:
  - default
  - name: ${guacamole_user}
    gecos: Guacamole OS User
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    shell: /bin/bash
    groups: users, docker
    lock_passwd: true
# --- EOF Create users ---------------------------------------------------------

# --- Update remote files ------------------------------------------------------
write_files:
# Add fail2ban configuration file ----------------------------------------------
  - path: "/etc/fail2ban/jail.local"
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${fail2ban_config}

# Add Guacamole initialization script ------------------------------------------
  - path: "/home/${guacamole_user}/guacamole_init.sh"
    permissions: "0755"
    encoding: "gzip+base64"
    content: |
      ${guacamole_initialization}

# Add post bootstrap script ----------------------------------------------------
  - path: "/root/post_bootstrap_config.sh"
    permissions: "0750"
    encoding: "gzip+base64"
    content: |
      ${post_bootstrap_config}

# Add Guacamole connections script ---------------------------------------------
  - path: "/home/${guacamole_user}/02_connections.sql"
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${guacamole_connections}

# Add Guacamole SSH authorized keys --------------------------------------------
  - path: "/home/${guacamole_user}/.ssh/authorized_keys"
    permissions: "0600"
    encoding: "gzip+base64"
    content: |
      ${authorized_keys}

# Append /etc/hosts with custom hosts entries ----------------------------------
  - path: /etc/hosts
    append: true
    encoding: "gzip+base64"
    content: |
      ${etc_hosts}
# --- EOF Update remote files --------------------------------------------------

# --- Run configuration commands -----------------------------------------------
runcmd:
# Configure firewalld for SSH, guacamole (HTTP/HTTPS)
  - firewall-offline-cmd --add-service=http
  - firewall-offline-cmd --add-service=https 
  - firewall-offline-cmd --add-service=openvpn
  - firewall-offline-cmd --add-port=60001/udp
  - firewall-offline-cmd --add-port=${vpn_port}/udp
  - firewall-offline-cmd --add-port=${ssh_port}/tcp
  - firewall-offline-cmd --list-all
  - systemctl enable firewalld 
  - systemctl restart firewalld 
  - systemctl status firewalld 

# configure tools from development repositories
  - dnf config-manager --set-enabled ol8_developer --set-enabled ol8_developer_EPEL
  - dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
  - dnf install -y pwgen fail2ban docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# configure automatic download / updates
  - dnf install -y dnf-automatic
  - sed -i 's/^apply_updates.*/apply_updates = yes/g' /etc/dnf/automatic.conf
  - systemctl enable --now dnf-automatic.timer
  - rm -f /etc/issue.d/cockpit.issue /etc/motd.d/cockpit

# install and configure docker
  - systemctl enable docker.service
  - systemctl start docker.service
  - rm -vf /etc/bash_completion.d/docker-compose

# configure fail2ban service
  - systemctl enable fail2ban
  - systemctl restart fail2ban

# config SELinux Network access
  - setsebool httpd_can_network_connect on -P

# config dedicated ssh port
  - semanage port -a -t ssh_port_t -p tcp ${ssh_port}
  - sed -i 's/#Port 22/Port ${ssh_port}/' /etc/ssh/sshd_config
  - service sshd restart

# Setup guacamole
  - /home/${guacamole_user}/guacamole_init.sh

# Post Bootstrap
  - nohup /root/post_bootstrap_config.sh > /root/post_bootstrap_config.log 2>&1 & 
# --- EOF Run configuration commands -------------------------------------------
# --- EOF ----------------------------------------------------------------------
